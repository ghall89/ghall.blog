---
import { getCollection } from 'astro:content'
const sortParam = Astro.url.search.split('=')[1]

import Layout from '@layouts/Layout.astro'
import FormattedDate from '@components/FormattedDate.astro'

const posts = await getCollection('blog')

switch (sortParam) {
	case 'date-des':
		posts.sort(
			(a, b) => Date.parse(b.data.pubDate) - Date.parse(a.data.pubDate)
		)
		break
	case 'date-asc':
		posts.sort(
			(a, b) => Date.parse(a.data.pubDate) - Date.parse(b.data.pubDate)
		)
		break
	case 'title':
		posts.sort((a, b) => a.data.title - b.data.title)
	default:
		break
}
---

<Layout title="Blog Archive">
	<div class="archive-options">
		<div class="select-container">
			<select name="sort by" id="sort-by">
				<option value="title">Title (Alphabetically)</option>
				<option value="date-des">Publish Date (Newest First)</option>
				<option value="date-asc">Publish Date (Oldest First)</option>
			</select>
		</div>
	</div>
	{
		posts.map(({ slug, data }) => (
			<div>
				<a href={`/posts/${slug}`}>{data.title}</a> -{' '}
				<FormattedDate date={data.pubDate} />
			</div>
		))
	}
</Layout>

<script is:inline>
	const sort = location.search.split('=')[1]
	const sortEl = document.querySelector('#sort-by')

	sortEl.value = sort || 'title'

	sortEl.addEventListener(
		'change',
		() => (window.location.href = `/archive?sort=${sortEl.value}`)
	)
</script>

<style>
	.archive-options {
		padding: 10px 0 20px;
	}
</style>
